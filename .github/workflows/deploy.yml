name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}

      # ECR ログイン
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr # outputs で参照するために id を設定

      # キャッシュクリア
      - name: Clear npm cache
        run: npm ci

      # Docker イメージを build・push する
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: "todo-app-frontend-image"
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          echo "image=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .github/workflows/ecs/task-definition.json
          container-name: "todo-app-container"
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        env:
          ECS_SERVICE: "todo-app-service"
          ECS_CLUSTER: "todo-app-frontend-cluster"
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Delete old task definitions
        env:
          ECS_SERVICE: "todo-app-service"
          ECS_CLUSTER: "todo-app-frontend-cluster"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          TASK_DEFINITION_FAMILY: "todo-app-frontend-definition"
        run: |
          # 最新のタスク定義を取得
          LATEST_TASK_DEFINITION_ARN=$(aws ecs describe-services --cluster ${{ env.ECS_CLUSTER }} --services ${{ env.ECS_SERVICE }} --query "services[0].taskDefinition" --output text)
      
          # 最新以外のタスク定義を取得
          OLD_TASK_DEFINITIONS=$(aws ecs list-task-definitions --family-prefix ${{ env.TASK_DEFINITION_FAMILY }} --query "taskDefinitionArns[?!=\`${LATEST_TASK_DEFINITION_ARN}\`]" --output json)
      
          # 取得したタスク定義を削除
          for TASK_DEFINITION in $(echo ${OLD_TASK_DEFINITIONS} | jq -r '.[]'); do
            aws ecs deregister-task-definition --task-definition ${TASK_DEFINITION}
          done
        